#!/usr/bin/env perl
use strict;
use URI;
use Net::Twitter;
use WWW::Curl::Simple;
use WWW::Mechanize;
use Web::Scraper;
use HTML::Entities;

# verify string, grab it from the brower after login wap.kaixin001.com
my $v = '';
my $twitter_id = '';

die "verify string not set.\n" if $v eq '';
die "twitter_id not set.\n" if $twitter_id eq '';

binmode STDERR, ":utf8";

my $last_record = last_record();
if ( not defined $last_record or $last_record eq '' ){
    print STDERR "empty result from kaxin001.com. something wrong.\n";
    exit;
}

my $last_tweet = last_tweet();
if ( $last_record eq $last_tweet ){
    print STDERR "already updated.\n";
    exit;
}

post_record( $last_tweet );


sub last_tweet {
    my $twitter = new Net::Twitter;
    my $data = $twitter->user_timeline({ id => $twitter_id,  page => 1, count => 1 });
    my $last = $data->[0]->{'text'};
    $last =~ s/\s+/ /g;
    printf STDERR "last tweet: %s\n", $last;
    return $last;
}


sub post_record {
    my $content = shift;
    my $mech = WWW::Mechanize->new;
    my $res = $mech->post('http://wap.kaixin001.com/record/submit.php?verify='.$v, { content => $content, privacy => 1 } );
    if ( $res->is_success ){
        printf STDERR "updated\n";
    }else{
        printf STDERR $res->status_line;
    }
}

sub last_record {
    my $record = scraper { process "div.list", "list[]" => 'HTML'; };
    my $res = $record->scrape( URI->new("http://wap.kaixin001.com/record/list.php?uid=2914649&verify=$v") );
    my ( $last ) = ( $res->{'list'}[0] =~ q{<br />(.*?)<br /><span } );
    $last = decode_entities($last);
    printf STDERR "last record: %s\n", $last;
    return $last;
}
