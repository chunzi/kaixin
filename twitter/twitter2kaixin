#!/usr/bin/env perl
use strict;
use warnings;
use URI;
use Net::Twitter;
use WWW::Mechanize;
use Web::Scraper;
use HTML::Entities;
binmode STDERR, ":utf8";

my $username = ''; # twitter username
my $v = ''; # login http://wap.kaixin001.com and paste the verify value here
my $uid = ''; # user id from http://www.kaixin001.com/home/?uid=2914649

my $last_record = last_record();
my $last_tweet = last_tweet();

if ( $last_record eq $last_tweet ){
    print STDERR "already updated.\n";
    exit;
}

post_record( $last_tweet );

sub post_record {
    my $content = shift;
    my $mech = WWW::Mechanize->new;
    my $res = $mech->post('http://wap.kaixin001.com/record/submit.php?verify='.$verify, { content => $content, privacy => 1 } );
    if ( $res->is_success ){
        printf STDERR "updated\n";
    }else{
        printf STDERR $res->status_line;
    }
}

sub last_tweet {
    my $twitter = new Net::Twitter;
    my $data = $twitter->user_timeline({ id => $username, page => 1, count => 1 });
    my $last = $data->[0]->{'text'};
    printf STDERR "last tweet: %s\n", $last;
    return $last;
}

sub last_record {
    my $record = scraper { process "div.list", "list[]" => 'HTML'; };
    my $res = $record->scrape( URI->new("http://wap.kaixin001.com/record/list.php?uid=$uid&verify=$verify") );
    my ( $last ) = ( $res->{'list'}[0] =~ q{<br />(.*?)<br /><a href} );
    $last = decode_entities( $last );
    printf STDERR "last record: %s\n", $last;
    return $last;
}
